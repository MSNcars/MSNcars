services:
  minio: # Object storage
    image: 'minio/minio'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
  postgres: # app and keycloak database
    image: postgres
    ports:
      - '5430:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: app_db
    volumes:
      - ./src/main/resources/init-scripts:/docker-entrypoint-initdb.d # creates keycloak db
  keycloak: # Authorization server
    image: 'bitnami/keycloak'
    ports:
      - '8081:8081'
    environment:
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_USER: admin
      KEYCLOAK_DATABASE_PASSWORD: admin
      KEYCLOAK_DATABASE_NAME: keycloak_db
      KEYCLOAK_HTTP_PORT: 8081
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_EXTRA_ARGS: --import-realm
    depends_on:
      - postgres
    volumes: # Mount configuration file
      - ./src/main/resources/containers/KeycloakConfig.json:/opt/bitnami/keycloak/data/import/KeycloakConfig.json
  nginx: # Reverse proxy
    image: 'nginx'
    ports:
      - '80:80'
    extra_hosts: # needed for ubuntu, to be able to use docker.internal in nginx.conf
      - "host.docker.internal:host-gateway"
    volumes:
      - ./src/main/resources/containers/NginxConfig.conf:/etc/nginx/nginx.conf
    depends_on:
      - keycloak
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
  logstash:
    image: docker.elastic.co/logstash/logstash:9.0.1
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    volumes:
      - ./src/main/resources/containers/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
  prometheus:
    image: prom/prometheus
    volumes:
      - ./src/main/resources/containers/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./src/main/resources/containers/grafana/dashboard-loader.yaml:/etc/grafana/provisioning/dashboards/dashboard-loader.yaml
      - ./src/main/resources/containers/grafana/prometheus-datasource.yaml:/etc/grafana/provisioning/datasources/prometheus-datasource.yaml
      - ./src/main/resources/containers/grafana/dashboard.json:/etc/grafana/dashboards/dashboard.json
    depends_on:
      - prometheus
volumes:
  elasticsearchdata: